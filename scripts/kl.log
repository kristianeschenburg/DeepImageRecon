nohup: ignoring input
/mnt/home/keschenb/anaconda2/lib/python2.7/site-packages/dicom/__init__.py:53: UserWarning: 
This code is using an older version of pydicom, which is no longer 
maintained as of Jan 2017.  You can access the new pydicom features and API 
by installing `pydicom` from PyPI.
See 'Transitioning to pydicom 1.x' section at pydicom.readthedocs.org 
for more information.

  warnings.warn(msg)
/mnt/home/keschenb/anaconda2/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
data_save
{'modelname': '.epochs.20.cost.KL.', 'outputdir': '../checkpoints/KL/'}
data_load
{'files': {'source2': {'noise': '../data/subj_2/AX_Flair_Clear.nii.gz', 'truth': '../data/subj_2/T2_Flair_Sense.nii.gz'}, 'source1': {'noise': '../data/subj_1/AX_Flair_Clear.nii.gz', 'truth': '../data/subj_1/T2_Flair_Sense.nii.gz'}}, 'by_slice': True}
model
{'num_poolings': 3, 'lr_init': 0.001, 'batch_size': 4, 'epochs': 20, 'validation_split': 0.1, 'loss_function': 'kullback_leibler_divergence', 'num_conv_per_pooling': 3, 'batch_norm': True}
process 2 data description
will augment data with 8 augmentations
Noise image: ../data/subj_2/AX_Flair_Clear.nii.gz
Ground truth image: ../data/subj_2/T2_Flair_Sense.nii.gz
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Noise image: ../data/subj_1/AX_Flair_Clear.nii.gz
Ground truth image: ../data/subj_1/T2_Flair_Sense.nii.gz
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 2018-07-03 17:00:50.975748: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2018-07-03 17:00:50.975783: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2018-07-03 17:00:50.975790: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2018-07-03 17:00:50.975795: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2018-07-03 17:00:50.975800: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
Image loaded, data size (1, 560, 560, 1) (sample, x, y, channel)
mean, min, max
(0.01846921154887226, 0.0, 0.18957323827149758)
(0.01731801098172829, 0.0, 0.3111756534601273)
(-0.0011512005671439362, -0.16804906380624643, 0.2666311220629995)
generate train dataset with augmentation size (480, 560, 560, 1),(480, 560, 560, 1)
setup parameters
Tensor("input_1:0", shape=(?, 560, 560, 1), dtype=float32)
(<tf.Tensor 'batch_normalization_3/cond/Merge:0' shape=(?, 560, 560, 32) dtype=float32>, <tf.Tensor 'max_pooling2d_1/MaxPool:0' shape=(?, 280, 280, 32) dtype=float32>)
(<tf.Tensor 'batch_normalization_6/cond/Merge:0' shape=(?, 280, 280, 32) dtype=float32>, <tf.Tensor 'max_pooling2d_2/MaxPool:0' shape=(?, 140, 140, 32) dtype=float32>)
(<tf.Tensor 'batch_normalization_9/cond/Merge:0' shape=(?, 140, 140, 64) dtype=float32>, <tf.Tensor 'max_pooling2d_3/MaxPool:0' shape=(?, 70, 70, 64) dtype=float32>)
Tensor("add_1/add:0", shape=(?, 70, 70, 64), dtype=float32)
(<tf.Tensor 'batch_normalization_12/cond/Merge:0' shape=(?, 140, 140, 64) dtype=float32>, <tf.Tensor 'concatenate_1/concat:0' shape=(?, 140, 140, 128) dtype=float32>)
(<tf.Tensor 'batch_normalization_15/cond/Merge:0' shape=(?, 280, 280, 32) dtype=float32>, <tf.Tensor 'concatenate_2/concat:0' shape=(?, 280, 280, 96) dtype=float32>)
(<tf.Tensor 'batch_normalization_18/cond/Merge:0' shape=(?, 560, 560, 32) dtype=float32>, <tf.Tensor 'concatenate_3/concat:0' shape=(?, 560, 560, 64) dtype=float32>)
use tanh activation
Tensor("conv2d_20/Tanh:0", shape=(?, 560, 560, 1), dtype=float32)
<keras.engine.training.Model object at 0x7fd6485ce510>
('train model:', '../checkpoints/KL/model_demo.epochs.20.cost.KL.epochs.20.ckpt')
('parameter count:', 409729)
model trains from scratch
Train on 432 samples, validate on 48 samples
Epoch 1/20
  4/432 [..............................] - ETA: 1940s - loss: 0.0082 - PSNRLoss: -10.0320 - mean_absolute_error: 0.6030 - mean_squared_error: 0.4554  8/432 [..............................] - ETA: 1959s - loss: -7.5395e-04 - PSNRLoss: -11.0233 - mean_absolute_error: 0.6783 - mean_squared_error: 0.5543